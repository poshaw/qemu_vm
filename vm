#! /bin/bash


vmdir="${HOME}/vm"


usage() {
	echo "Usage: $0 [option] VM-NAME" 1>&2
	echo -e "\noptions:" 1>&2
	echo -e "[ -h ] :
\tprint help" 1>&2
	echo -e "[ -n VM_NAME ] :
\tmake a new virtual machine named VM_NAME ex:
\t$ $0 -n new_virtual_machine
\tcreates a new vm located at:
\t${vmdir}/VM-NAME/" 1>&2
	echo -e "[ -e ARCHIVE ] :
\textract an archived virtual machine" 1>&2
}


exit_abnormal() {
	usage
	exit 1
}


makeVM (){
	# function expects a template.tar.gz to base new VMs from
	# 
	newvm=${1}
	cd ${vmdir}
	shopt -s nullglob
	set -- template*.tar.gz
	if [ "$#" -gt 0 ]; then
		echo "making vm ${newvm}"
		rm -rf template/
		extractVM $(ls -t ${vmdir}/template*tar.gz | head -n1)
		mv "template" "${newvm}"
	fi
	${vmdir}/${newvm}/create
}


extractVM(){
	# check if archive exists
	cd ${vmdir}
	echo "Extracting VM: ${1}"
	file="$(basename "${1}")"
	if [[ -f ${vmdir}/${file} ]]; then
		echo "Found: ${vmdir}/${file}"
		cd ${vmdir}
		pv "${file}" | tar xvz
	fi
}


if [[ $# -lt 1 ]]; then
	echo "Error: vm name must be provided"
	exit_abnormal
fi

while getopts 'hn:e:' option; do
	case "${option}" in
		h)
			usage
			exit 0
			;;
		n)
			makeVM ${OPTARG}
			exit 0
			;;
		e)
			extractVM ${OPTARG}
			exit 0
			;;
		*)                            # If unknown (any other) option:
			exit_abnormal
			;;
	esac
done
